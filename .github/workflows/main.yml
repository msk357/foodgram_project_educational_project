name: Foodgram-app workflow 

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - name: Install dependencies
      run: | 
        # обновление pip и зависимостей
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        cd backend/
        pip install -r requirements.txt 

  build_and_push_backend_to_docker_hub:
      name: Push backend image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests

      steps:
        - name: Check out the repo
          # Проверка доступности репозитория Docker Hub для workflow
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          # Запуск скрипта авторизации на Docker Hub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USER }} 
            password: ${{ secrets.DOCKER_PASS }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            push: true
            tags: msk357/foodgram_backend:latest
            file: backend/Dockerfile

  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_backend_to_docker_hub
      if: github.ref == 'refs/heads/master'

  deploy:
    runs-on: ubuntu-22.04
    needs:
      - copy_files_to_server
      - build_push_backend_to_DockerHub
      - build_push_frontend_to_DockerHub
    steps:
    - name: remote ssh commands to deploy
      uses: garygrossgarten/github-action-ssh@release
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        privateKey: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        command: |
          sudo docker-compose stop
          sudo docker-compose rm backend
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          sudo docker-compose up -d





